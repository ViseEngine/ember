$#include "framework/EntityExporter.h"

namespace Ember
{

class EntityExporter
{
public:
	explicit EntityExporter(Eris::Account& account);
	virtual ~EntityExporter();

	void start(const std::string& filename);
	void start(const std::string& filename, const std::string& entityId);
	
	/**
	 * @brief Cancels the dumping.
	 */
	void cancel();

	/**
	 * @brief Sets the description of the export.
	 *
	 * Call this before you call start().
	 * @param description The description.
	 */
	void setDescription(const std::string& description);

	/**
	 * @brief Sets the name of the export.
	 *
	 * Call this before you call start().
	 * @param name The name.
	 */
	void setName(const std::string& name);

	sigc::signal<void> EventCompleted;
	
	/**
	 * @brief Emitted when an entity has been dumped.
	 *
	 * The argument denotes how many instances have been dumped.
	 * Note that it's not really possible (in a clean way) to in advance know how many instances there are on the server.
	 */
	sigc::signal<void, int> EventProgress;

};

}
